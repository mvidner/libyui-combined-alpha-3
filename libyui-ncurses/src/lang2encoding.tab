#! /bin/sh
#
# ######################################################
function cattab() {
cat <<EOF
ca	ISO-8859-1
cs	ISO-8859-2
da	ISO-8859-1
de	ISO-8859-1
el	ISO-8859-7
en	ISO-8859-1
es	ISO-8859-1
fi	ISO-8859-1
fr	ISO-8859-1
gl	ISO-8859-1
hr	ISO-8859-2
hu	ISO-8859-2
is	ISO-8859-1
it	ISO-8859-1
iw	ISO-8859-8
ja	eucJP
lt	ISO-8859-13
nl	ISO-8859-1
no	ISO-8859-1
pl	ISO-8859-2
pt	ISO-8859-1
ro	ISO-8859-2
ru	ISO-8859-5
sk	ISO-8859-2
sl	ISO-8859-2
sv	ISO-8859-1
tr	ISO-8859-9
EOF
}
# ######################################################
function mkpair() {
	awk '
		{ e[$2]=e[$2]":"$1 }
	END	{ for ( v in e ) printf "%-15s %s:\n", v, e[v] }
	' | LC_ALL=C sort
}
# ######################################################
cattab | mkpair | {
# #########
# FILE HEAD
# #########
cat <<EOF
//-----------------------------------------------------------------
// generated by lang2encoding.tab
//-----------------------------------------------------------------
#include <string>

std::string language2encoding( std::string lang )
{
  using std::string;
  lang = ":" + lang + ":";
EOF
# #########

# #########
# ELSE IFs
# #########
Melse=""
while read Menc Mlang; do cat <<EOF
  ${Melse}if ( string( "${Mlang}" ).find( lang ) != string::npos )
    return "${Menc}";
EOF
Melse="else "
done
# #########

# #########
# FILE END
# #########
cat <<EOF
  return "";
}
//-----------------------------------------------------------------
EOF
# #########
}
# ######################################################
